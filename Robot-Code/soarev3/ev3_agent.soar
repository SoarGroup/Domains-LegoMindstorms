sp {topstate*propose*init-agent
   (state <s> ^superstate nil
             -^name)
-->
   (<s> ^operator <o> +)
   (<o> ^name init-agent)
}

sp {topstate*apply*init-agent
   (state <s> ^operator.name init-agent)
-->
   (<s> ^topstate <s>
        ^name ev3-agent
        ^next-action 3 
        ^action-queue <q>
        ^current-action <a1>)
   (<q> ^action <a1> <a2> <a3> <a4> <a5> <a6>)
   (<a1> ^number 1
         ^next <a2>)
   (<a2> ^number 2
         ^next <a3>)
   (<a3> ^number 3
         ^next <a4>)
   (<a4> ^number 4
         ^next <a5>)
   (<a5> ^number 5
         ^next <a6>)
   (<a6> ^number 6
         ^next <a1>)
}

sp {topstate*propose*wait
   (state <s> ^name ev3-agent
             -^operator.name wait)
-->
   (<s> ^operator <o> + <)
   (<o> ^name wait)
}

sp {topstate*propose*take-action
   (state <s> ^name ev3-agent
              ^io.input-link.time-step <t>
              ^next-action < <t>
              ^current-action <a>)
-->
   (<s> ^operator <o> +)
   (<o> ^name take-action
        ^action <a>)
}

sp {topstate*apply*take-action
   (state <s> ^name ev3-agent
              ^operator <o>
              ^current-action <a>
              ^next-action <t>
              ^io.output-link <out>)
   (<o> ^name take-action
        ^action <a>)
   (<a> ^next <a2>)
-->
   (<s> ^current-action <a> -
       ^current-action <a2>
       ^next-action <t> -
       ^next-action (+ <t> 3))
}

sp {topstate*apply*take-action*1
   (state <s> ^name ev3-agent
              ^operator <o>
              ^io.output-link <out>)
   (<o> ^name take-action
        ^action.number 1)
-->
   (<out> ^motor <m>)
   (<m> ^port 1
        ^start.power 20)
}

sp {topstate*apply*take-action*2
   (state <s> ^name ev3-agent
              ^operator <o>
              ^io.output-link <out>)
   (<o> ^name take-action
        ^action.number 2)
-->
   (<out> ^motor <m>
          ^brick.led.set solid-red)
   (<m> ^port 1
        ^stop <st>)
}
sp {topstate*apply*take-action*3
   (state <s> ^name ev3-agent
              ^operator <o>
              ^io.output-link <out>)
   (<o> ^name take-action
        ^action.number 3)
-->
   (<out> ^motor <m>)
   (<m> ^port 1
        ^start.power 40)
}
sp {topstate*apply*take-action*4
   (state <s> ^name ev3-agent
              ^operator <o>
              ^io.output-link <out>)
   (<o> ^name take-action
        ^action.number 4)
-->
   (<out> ^motor <m>
          ^brick.led.set flash-green)
   (<m> ^port 1
        ^stop <stop>)
}
sp {topstate*apply*take-action*5
   (state <s> ^name ev3-agent
              ^operator <o>
              ^io.output-link <out>)
   (<o> ^name take-action
        ^action.number 5)
-->
   (<out> ^motor <m>)
   (<m> ^port 1
        ^start.power 60)
}
sp {topstate*apply*take-action*6
   (state <s> ^name ev3-agent
              ^operator <o>
              ^io.output-link <out>)
   (<o> ^name take-action
        ^action.number 6)
-->
   (<out> ^motor <m>
          ^brick.led.set off)
   (<m> ^port 1
        ^stop <stop>)
}

sp {topstate*remove*completed*actions*d1
   (state <s> ^name ev3-agent
              ^operator <op>
              ^io.output-link <out>)
   (<out> ^<att> <cmd>)
   (<cmd> ^status <status>)
-->
   (<out> ^<att> <cmd> -)
}




   