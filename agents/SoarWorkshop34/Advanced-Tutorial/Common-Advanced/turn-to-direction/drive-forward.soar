############################################################
#
# file: Common-Advanced/turn-to-direction/drive-forward.soar
# contains:
#   operator drive-forward
#     Drives the robot forward until it is off a junction color
#     Proposed when relative-direction is forward OR
#       the robot has turned and is still on the junction
#  
############################################################

# If the relative-direction is forward and the robot is still
#   on a junction, propose drive-forward
sp {turn-to-direction*propose*drive-forward
	(state <s> ^name turn-to-direction
				 ^relative-direction forward
				 ^color-type junction)
-->
	(<s> ^operator <o> +)
	(<o> ^name drive-forward)
}

# If the robot has already turned and is still on a junction,
#   propose drive-forward
sp {turn-to-direction*propose*drive-forward*after-turning
	(state <s> ^name turn-to-direction
				 ^superstate.turned true
				 ^color-type junction)
-->
	(<s> ^operator <o> +)
	(<o> ^name drive-forward)
}

# When drive-forward is selected, have both motors 
#   turn backwards
sp {turn-to-direction*apply*drive-forward
	(state <s> ^name turn-to-direction
				 ^operator.name drive-forward
				 ^left-motor-port <left-port>
				 ^right-motor-port <right-port>
				 ^io.output-link <out>)
-->
	(<out> ^motor <left> <right>)
	(<left> ^port <left-port>
					^set-direction backward
					^set-power 40)
	(<right> ^port <right-port>
					 ^set-direction backward
					 ^set-power 40)
}
