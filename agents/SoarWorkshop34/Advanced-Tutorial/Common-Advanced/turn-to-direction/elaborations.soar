############################################################
#
# file: Common-Advanced/turn-to-direction/elaborations.soar
# contains:
#   elaborate from superstate:
#     ^io, ^direction-map, ^color-sensor-value, ^color-type
#     ^left-motor-port, ^right-motor-port
#   elaborate ^goal-direction
#   elaborate ^relative-direction
############################################################

# elaborate necessary information from superstate
sp {turn-to-direction*elaborate*superstate*info
	(state <s> ^name turn-to-direction
						 ^superstate <ss>)
	(<ss> ^io <io>
		  ^direction-map <map>
			^current-direction <cur>
			^color-sensor-value <color>
			^color-type <color-type>
			^left-motor-port <left-port>
			^right-motor-port <right-port>)
-->
	(<s> ^io <io>
			^direction-map <map>
			^current-direction <cur>
			^color-sensor-value <color>
			^color-type <color-type>
			^left-motor-port <left-port>
			^right-motor-port <right-port>)
}

# elaborate goal-direction
#   Gives the cardinal direction (NSEW) the robot selected
#   (copied from superstate operator) 
sp {turn-to-direction*elaborate*goal-direction
	(state <s> ^name turn-to-direction
						 ^superstate.operator.direction <dir>)
-->
	(<s> ^goal-direction <dir>)
	(write |Goal Direction: | <dir> (crlf))
}

# elaborate relative-direction
#   Gives the relative direction (left, right, forward, backward)
#   The robot needs to go 
sp {turn-to-direction*elaborate*relative-direction
	(state <s> ^name turn-to-direction
						 ^current-direction <cur-dir>
						 ^goal-direction <goal-dir>
						 ^direction-map.direction <dir>)
	(<dir> ^name <cur-dir>
				 ^<rel-dir>.name <goal-dir>)
-->
	(<s> ^relative-direction <rel-dir>)
	(write |Relative Direction: | <rel-dir> (crlf))
}




