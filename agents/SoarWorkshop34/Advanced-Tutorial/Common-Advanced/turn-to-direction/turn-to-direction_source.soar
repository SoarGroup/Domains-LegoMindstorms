source propose-turn-to-direction.soar
# Contains:
#   proposal rule for turn-to-direction
#   Proposed when selected-direction is on the top state

source elaborations.soar
# Contains:
#   Rules for elaborating the turn-to-direction substate

source preferences.soar
# Contains:
#   Rules for creating operator preferences
#   Gives the drive-forward, turn-left, turn-right, and turn-around
#     all best preferences


############################################################
# Operators for moving the robot to the right direction:

source drive-forward.soar
# Contains:
#   operator drive-forward
#     drives the robot forward until off the junction color

source turn-left.soar
# Contains:
#   operator turn-left
#     turns the robot 90 degrees to the left

source turn-right.soar
# Contains:
#   operator turn-right
#     turns the robot 90 degrees to the right

source turn-around.soar
# Contains:
#   operator turn-around
#     turns the robot 180 degrees around


############################################################
# Other operators

source find-black.soar
# Contains:
#   operator rotate-left
#     Once off the junction, if on the color-left, rotate-left
#   operator rotate-right
#     Once off the junction, if on the color-right, rotate-right
#     

source finish-turn-to-direction.soar
# Contains:
#   operator finish-turn-to-direction
#     Once we've found the black path, we clean up the superstate
#     (swap colors, change current-direction, remove flags)
